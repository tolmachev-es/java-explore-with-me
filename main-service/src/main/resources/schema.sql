CREATE TABLE IF NOT EXISTS CATEGORY (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS USERS (
ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
NAME VARCHAR(250) NOT NULL,
EMAIL VARCHAR(254) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS COMPILATIONS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    TITLE VARCHAR(50) NOT NULL,
    PINNED BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS EVENTS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    ANNOTATION VARCHAR(2000) NOT NULL,
    CATEGORY_ID BIGINT NOT NULL,
    DESCRIPTION VARCHAR(7000) NOT NULL,
    EVENT_DATE TIMESTAMP NOT NULL,
    LIMIT_GUESTS BIGINT NOT NULL,
    MODERATION BOOLEAN NOT NULL,
    TITLE VARCHAR(120) NOT NULL,
    OWNER_ID BIGINT NOT NULL,
    CREATED_TIME TIMESTAMP NOT NULL,
    PUBLISHED_TIME TIMESTAMP,
    STATUS VARCHAR(10) NOT NULL,
    PAID BOOLEAN NOT NULL,
    LAT REAL NOT NULL,
    LON REAL NOT NULL,
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (ID),
    FOREIGN KEY (OWNER_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS REQUESTS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    EVENT_ID BIGINT NOT NULL,
    CONFIRMED VARCHAR(10) NOT NULL,
    CREATED TIMESTAMP NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (ID),
    CONSTRAINT user_event_request_must_be_unique UNIQUE (USER_ID, EVENT_ID)
);

CREATE TABLE IF NOT EXISTS COMPILATION_EVENTS (
    COMPILATION_ID BIGINT NOT NULL,
    EVENT_ID BIGINT NOT NULL,
    PRIMARY KEY (COMPILATION_ID, EVENT_ID),
    FOREIGN KEY (COMPILATION_ID) REFERENCES COMPILATIONS (ID),
    FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (ID),
    CONSTRAINT unique_key UNIQUE (COMPILATION_ID, EVENT_ID)
);